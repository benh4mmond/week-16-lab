name: "Lint and test and deploy"

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  # Needed for the 'trilom/file-changes-action' action
  pull-requests: read

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  ci-steps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: TruffleHog secrets scanning
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

      - name: setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          registry-url: "https://registry.npmjs.org"
          # cache: npm

      - name: install deps
        working-directory: app
        run: |
          npm i

      - name: run linting
        working-directory: app
        run: |
          npm run lint

      # TODO: add supply chain scanning
      - name: npm audit
        working-directory: app
        run: |
          npm audit

      # TODO: add unit testing
      - name: List files in the repository
        working-directory: app/lib
        run: |
          npm ci && npm test


      # TODO: add cloudformation linting
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: BenHammondStack
          template: infra/networking.yaml


      # TODO: add deployment to cloudformation
      # - name: List files in the repository
      #   working-directory: app/lib
      #   run: |
      #     ./deploy.sh


      - run: echo "üçè This job's status is ${{ job.status }}."
